{"version":3,"file":"pivot_spec.js","sources":["pivot_spec.coffee"],"names":[],"mappings":"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","sourcesContent":["fixtureData = [\r\n    [\"name\",    \"gender\",   \"colour\",    \"birthday\",     \"trials\",   \"successes\"],\r\n    [\"Nick\",    \"male\",     \"blue\",      \"1982-11-07\",   103,        12],\r\n    [\"Jane\",    \"female\",   \"red\",       \"1982-11-08\",   95,         25],\r\n    [\"John\",    \"male\",     \"blue\",      \"1982-12-08\",   112,        30],\r\n    [\"Carol\",   \"female\",   \"yellow\",    \"1983-12-08\",   102,        14]\r\n]\r\n\r\nraggedFixtureData = [\r\n    {name: \"Nick\", \"colour\": \"red\", \"age\": 34}\r\n    {name: \"Jane\", \"gender\": \"female\"}\r\n    {name: \"John\", \"gender\": \"male\", \"age\": 12}\r\n    {name: \"Jim\", \"gender\": null, \"age\": 12}\r\n]\r\n\r\ndescribe \"$.pivotUI()\", ->\r\n    describe \"with no rows/cols, default count aggregator, default TableRenderer\",  ->\r\n        table = null\r\n\r\n        beforeEach (done) ->\r\n            table = $(\"<div>\").pivotUI fixtureData, onRefresh: done\r\n        it \"has all the basic UI elements\", (done) ->\r\n            expect table.find(\"td.pvtAxisContainer\").length\r\n            .toBe  3\r\n            expect table.find(\"td.pvtRendererArea\").length\r\n            .toBe  1\r\n            expect table.find(\"td.pvtVals\").length\r\n            .toBe  1\r\n            expect table.find(\"select.pvtRenderer\").length\r\n            .toBe  1\r\n            expect table.find(\"select.pvtAggregator\").length\r\n            .toBe  1\r\n            expect table.find(\"span.pvtAttr\").length\r\n            .toBe  6\r\n            done()\r\n\r\n        it \"reflects its inputs\", (done) ->\r\n            expect table.find(\"td.pvtUnused span.pvtAttr\").length\r\n            .toBe  6\r\n            expect table.find(\"select.pvtRenderer\").val()\r\n            .toBe  \"Table\"\r\n            expect table.find(\"select.pvtAggregator\").val()\r\n            .toBe  \"Count\"\r\n            done()\r\n\r\n        it \"renders a table\", (done) ->\r\n            expect table.find(\"table.pvtTable\").length\r\n            .toBe  1\r\n            done()\r\n\r\n\r\n        describe \"its renderer output\", ->\r\n            it \"has the correct type and number of cells\", (done) ->\r\n                expect table.find(\"th.pvtTotalLabel\").length\r\n                .toBe  1\r\n                expect table.find(\"td.pvtGrandTotal\").length\r\n                .toBe  1\r\n                done()\r\n\r\n            it \"has the correct textual representation\", (done) ->\r\n                expect table.find(\"table.pvtTable\").text()\r\n                .toBe [\"Totals\", \"4\"].join(\"\")\r\n                done()\r\n\r\n            it \"has a correct grand total with data value\", (done) ->\r\n                expect table.find(\"td.pvtGrandTotal\").text()\r\n                .toBe  \"4\"\r\n                expect table.find(\"td.pvtGrandTotal\").data(\"value\")\r\n                .toBe  4\r\n                done()\r\n\r\n    describe \"with rows/cols, sum-over-sum aggregator, Heatmap renderer\",  ->\r\n        table = null\r\n\r\n        beforeEach (done) ->\r\n            table = $(\"<div>\").pivotUI fixtureData,\r\n                rows: [\"gender\"], cols: [\"colour\"]\r\n                aggregatorName: \"Sum over Sum\"\r\n                vals: [\"successes\", \"trials\"]\r\n                rendererName: \"Heatmap\"\r\n                onRefresh: done\r\n\r\n        it \"has all the basic UI elements\", (done) ->\r\n            expect table.find(\"td.pvtAxisContainer\").length\r\n            .toBe  3\r\n            expect table.find(\"td.pvtRendererArea\").length\r\n            .toBe  1\r\n            expect table.find(\"td.pvtVals\").length\r\n            .toBe  1\r\n            expect table.find(\"select.pvtRenderer\").length\r\n            .toBe  1\r\n            expect table.find(\"select.pvtAggregator\").length\r\n            .toBe  1\r\n            expect table.find(\"span.pvtAttr\").length\r\n            .toBe  6\r\n            done()\r\n\r\n        it \"reflects its inputs\", (done) ->\r\n            expect table.find(\"td.pvtUnused span.pvtAttr\").length\r\n            .toBe  4\r\n            expect table.find(\"td.pvtRows span.pvtAttr\").length\r\n            .toBe  1\r\n            expect table.find(\"td.pvtCols span.pvtAttr\").length\r\n            .toBe  1\r\n            expect table.find(\"select.pvtRenderer\").val()\r\n            .toBe  \"Heatmap\"\r\n            expect table.find(\"select.pvtAggregator\").val()\r\n            .toBe  \"Sum over Sum\"\r\n            done()\r\n\r\n        it \"renders a table\", (done) ->\r\n            expect table.find(\"table.pvtTable\").length\r\n            .toBe  1\r\n            done()\r\n\r\n        describe \"its renderer output\", ->\r\n            it \"has the correct type and number of cells\", (done) ->\r\n                expect table.find(\"th.pvtAxisLabel\").length\r\n                .toBe  2\r\n                expect table.find(\"th.pvtRowLabel\").length\r\n                .toBe  2\r\n                expect table.find(\"th.pvtColLabel\").length\r\n                .toBe  3\r\n                expect table.find(\"th.pvtTotalLabel\").length\r\n                .toBe  2\r\n                expect table.find(\"td.pvtVal\").length\r\n                .toBe  6\r\n                expect table.find(\"td.pvtTotal\").length\r\n                .toBe  5\r\n                expect table.find(\"td.pvtGrandTotal\").length\r\n                .toBe  1\r\n                done()\r\n\r\n            it \"has the correct textual representation\", (done) ->\r\n                expect table.find(\"table.pvtTable\").text()\r\n                .toBe [\r\n                    \"colour\",   \"blue\", \"red\",  \"yellow\",   \"Totals\",\r\n                    \"gender\",\r\n                    \"female\",           \"0.26\", \"0.14\",     \"0.20\",\r\n                    \"male\",     \"0.20\",                     \"0.20\",\r\n                    \"Totals\",   \"0.20\", \"0.26\", \"0.14\",     \"0.20\"\r\n                    ].join(\"\")\r\n                done()\r\n\r\n            it \"has a correct spot-checked cell with data value\", (done) ->\r\n                expect table.find(\"td.col0.row1\").text()\r\n                .toBe  \"0.20\"\r\n                expect table.find(\"td.col0.row1\").data(\"value\")\r\n                .toBe  (12+30)/(103+112)\r\n                done()\r\n\r\n    describe \"with ragged input\",  ->\r\n        table = $(\"<div>\").pivotUI raggedFixtureData, rows: [\"gender\"], cols: [\"age\"]\r\n\r\n        it \"renders a table with the correct textual representation\", ->\r\n            expect table.find(\"table.pvtTable\").text()\r\n            .toBe [\r\n                \"age\",     \"12\",  \"34\",  \"null\",  \"Totals\"\r\n                \"gender\",\r\n                \"female\",                 \"1\",    \"1\"\r\n                \"male\",    \"1\",                   \"1\"\r\n                \"null\",    \"1\",    \"1\",           \"2\"\r\n                \"Totals\",  \"2\",    \"1\",   \"1\",    \"4\"\r\n                ].join(\"\")\r\n\r\ndescribe \"$.pivot()\", ->\r\n\r\n    describe \"with no rows/cols, default count aggregator, default TableRenderer\",  ->\r\n        table = $(\"<div>\").pivot fixtureData\r\n\r\n        it \"renders a table\", ->\r\n            expect table.find(\"table.pvtTable\").length\r\n            .toBe  1\r\n\r\n        describe \"its renderer output\", ->\r\n\r\n            it \"has the correct textual representation\", ->\r\n                expect table.find(\"table.pvtTable\").text()\r\n                .toBe [\"Totals\", \"4\"].join(\"\")\r\n\r\n            it \"has a correct grand total with data value\", ->\r\n                expect table.find(\"td.pvtGrandTotal\").text()\r\n                .toBe  \"4\"\r\n                expect table.find(\"td.pvtGrandTotal\").data(\"value\")\r\n                .toBe  4\r\n\r\n    describe \"with rows/cols, sum aggregator, derivedAttributes, filter and sorters\",  ->\r\n        {sortAs, derivers, aggregators} = $.pivotUtilities\r\n        table = $(\"<div>\").pivot fixtureData,\r\n            rows: [\"gender\"], cols: [\"birthyear\"], aggregator: aggregators[\"Sum\"]([\"trialbins\"])\r\n            filter: (record) -> record.name != \"Nick\"\r\n            derivedAttributes:\r\n                birthyear: derivers.dateFormat \"birthday\", \"%y\"\r\n                trialbins: derivers.bin \"trials\", 10\r\n            sorters: (attr) ->\r\n                if attr == \"gender\" then return sortAs([\"male\", \"female\"])\r\n\r\n        it \"renders a table with the correct textual representation\", ->\r\n            expect table.find(\"table.pvtTable\").text()\r\n            .toBe [\r\n                \"birthyear\",    \"1982\",     \"1983\",     \"Totals\"\r\n                \"gender\",\r\n                \"male\",         \"110.00\",               \"110.00\"\r\n                \"female\",       \"90.00\",    \"100.00\",   \"190.00\"\r\n                \"Totals\",       \"200.00\",   \"100.00\",   \"300.00\"\r\n                ].join(\"\")\r\n\r\n    describe \"with rows/cols, fraction-of aggregator\",  ->\r\n        {aggregators} = $.pivotUtilities\r\n        table = $(\"<div>\").pivot fixtureData,\r\n            rows: [\"gender\"]\r\n            aggregator: aggregators[\"Sum as Fraction of Total\"]([\"trials\"])\r\n\r\n        it \"renders a table with the correct textual representation\", ->\r\n            expect table.find(\"table.pvtTable\").text()\r\n            .toBe [\r\n                \"gender\",  \"Totals\"\r\n                \"female\",  \"47.8%\"\r\n                \"male\",    \"52.2%\"\r\n                \"Totals\",  \"100.0%\"\r\n                ].join(\"\")\r\n\r\n    describe \"with rows/cols, custom aggregator, custom renderer with options\",  ->\r\n        received_PivotData = null\r\n        received_rendererOptions = null\r\n\r\n        table = $(\"<div>\").pivot fixtureData,\r\n            rows: [\"name\", \"colour\"], cols: [\"trials\", \"successes\"]\r\n            aggregator: ->\r\n                count2x: 0\r\n                push: -> @count2x +=2\r\n                value: -> @count2x\r\n                format: (x) -> \"formatted \" + x\r\n            renderer: (a,b) ->\r\n                received_PivotData = a\r\n                received_rendererOptions = b\r\n                return $(\"<div>\").addClass(b.greeting).text(\"world\")\r\n            rendererOptions: {greeting:\"hithere\"}\r\n\r\n        it \"renders the custom renderer as per options\", ->\r\n            expect table.find(\"div.hithere\").length\r\n            .toBe  1\r\n\r\n        describe \"its received PivotData object\", ->\r\n            it \"has a correct grand total value and format for custom aggregator\", ->\r\n                agg = received_PivotData.getAggregator([],[])\r\n                val = agg.value()\r\n                expect(val).toBe 8\r\n                expect(agg.format(val)).toBe \"formatted 8\"\r\n\r\n\r\n    describe \"with ragged input\",  ->\r\n        table = $(\"<div>\").pivot raggedFixtureData, rows: [\"gender\"], cols: [\"age\"]\r\n\r\n        it \"renders a table with the correct textual representation\", ->\r\n            expect table.find(\"table.pvtTable\").text()\r\n            .toBe [\r\n                \"age\",     \"12\",  \"34\",  \"null\",  \"Totals\"\r\n                \"gender\",\r\n                \"female\",                 \"1\",    \"1\"\r\n                \"male\",    \"1\",                   \"1\"\r\n                \"null\",    \"1\",    \"1\",           \"2\"\r\n                \"Totals\",  \"2\",    \"1\",   \"1\",    \"4\"\r\n                ].join(\"\")\r\n\r\ndescribe \"$.pivotUtilities\", ->\r\n\r\n    describe \".PivotData()\", ->\r\n        sumOverSumOpts =\r\n            aggregator: $.pivotUtilities.aggregators[\"Sum over Sum\"]([\"a\",\"b\"])\r\n\r\n        describe \"with no options\", ->\r\n            aoaInput =  [ [\"a\",\"b\"], [1,2], [3,4] ]\r\n            pd = new $.pivotUtilities.PivotData aoaInput\r\n\r\n            it \"has the correct grand total value\", ->\r\n                expect pd.getAggregator([],[]).value()\r\n                .toBe 2\r\n\r\n        describe \"with array-of-array input\", ->\r\n            aoaInput =  [ [\"a\",\"b\"], [1,2], [3,4] ]\r\n            pd = new $.pivotUtilities.PivotData aoaInput, sumOverSumOpts\r\n\r\n            it \"has the correct grand total value\", ->\r\n                expect pd.getAggregator([],[]).value()\r\n                .toBe (1+3)/(2+4)\r\n\r\n        describe \"with array-of-object input\", ->\r\n            aosInput =  [ {a:1, b:2}, {a:3, b:4} ]\r\n            pd = new $.pivotUtilities.PivotData aosInput, sumOverSumOpts\r\n\r\n            it \"has the correct grand total value\", ->\r\n                expect pd.getAggregator([],[]).value()\r\n                .toBe (1+3)/(2+4)\r\n\r\n        describe \"with ragged array-of-object input\", ->\r\n            raggedAosInput =  [ {a:1}, {b:4}, {a: 3, b: 2} ]\r\n            pd = new $.pivotUtilities.PivotData raggedAosInput, sumOverSumOpts\r\n\r\n            it \"has the correct grand total value\", ->\r\n                expect pd.getAggregator([],[]).value()\r\n                .toBe (1+3)/(2+4)\r\n\r\n        describe \"with function input\", ->\r\n            functionInput = (record) ->\r\n                record a:1, b:2\r\n                record a:3, b:4\r\n            pd = new $.pivotUtilities.PivotData functionInput, sumOverSumOpts\r\n\r\n            it \"has the correct grand total value\", ->\r\n                expect pd.getAggregator([],[]).value()\r\n                .toBe (1+3)/(2+4)\r\n\r\n        describe \"with jQuery table element input\", ->\r\n            tableInput = $ \"\"\"\r\n                <table>\r\n                    <thead>\r\n                        <tr> <th>a</th><th>b</th> </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr> <td>1</td> <td>2</td> </tr>\r\n                        <tr> <td>3</td> <td>4</td> </tr>\r\n                    </tbody>\r\n                </table>\r\n                \"\"\"\r\n            pd = new $.pivotUtilities.PivotData tableInput, sumOverSumOpts\r\n\r\n            it \"has the correct grand total value\", ->\r\n                expect pd.getAggregator([],[]).value()\r\n                .toBe (1+3)/(2+4)\r\n\r\n\r\n        describe \"with rows/cols\", ->\r\n            pd = new $.pivotUtilities.PivotData fixtureData,\r\n                rows: [\"name\", \"colour\"],\r\n                cols: [\"trials\", \"successes\"]\r\n\r\n            it \"has correctly-ordered row keys\", ->\r\n                expect pd.getRowKeys()\r\n                .toEqual [ [ 'Carol', 'yellow' ], [ 'Jane', 'red' ], [ 'John', 'blue' ], [ 'Nick', 'blue' ] ]\r\n\r\n            it \"has correctly-ordered col keys\", ->\r\n                expect pd.getColKeys()\r\n                .toEqual [ [ 95, 25 ], [ 102, 14 ], [ 103, 12 ], [ 112, 30 ] ]\r\n\r\n            it \"can be iterated over\", ->\r\n                numNotNull = 0\r\n                numNull = 0\r\n                for r in pd.getRowKeys()\r\n                    for c in pd.getColKeys()\r\n                        if pd.getAggregator(r, c).value()?\r\n                            numNotNull++\r\n                        else\r\n                            numNull++\r\n                expect numNotNull\r\n                .toBe 4\r\n                expect numNull\r\n                .toBe 12\r\n\r\n            it \"returns matching records\", ->\r\n                records = []\r\n                pd.forEachMatchingRecord gender: \"male\", (x) -> records.push(x.name)\r\n                expect records\r\n                .toEqual [\"Nick\", \"John\"]\r\n\r\n            it \"has a correct spot-checked aggregator\", ->\r\n                agg = pd.getAggregator([ 'Carol', 'yellow' ],[ 102, 14 ])\r\n                val = agg.value()\r\n                expect(val).toBe 1\r\n                expect(agg.format(val)).toBe \"1\"\r\n\r\n            it \"has a correct grand total aggregator\", ->\r\n                agg = pd.getAggregator([],[])\r\n                val = agg.value()\r\n                expect(val).toBe 4\r\n                expect(agg.format(val)).toBe \"4\"\r\n\r\n    describe \".aggregatorTemplates\", ->\r\n\r\n        getVal = (aggregator) ->\r\n            pd = new $.pivotUtilities.PivotData(fixtureData, {aggregator})\r\n            return pd.getAggregator([],[]).value()\r\n        tpl = $.pivotUtilities.aggregatorTemplates\r\n\r\n        describe \".count\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.count()())\r\n                .toBe 4\r\n\r\n        describe \".countUnique\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.countUnique()(['gender']))\r\n                .toBe 2\r\n\r\n        describe \".listUnique\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.listUnique()(['gender']))\r\n                .toBe 'female,male'\r\n\r\n        describe \".average\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.average()(['trials']))\r\n                .toBe 103\r\n\r\n        describe \".sum\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.sum()(['trials']))\r\n                .toBe 412\r\n\r\n        describe \".min\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.min()(['trials']))\r\n                .toBe 95\r\n\r\n        describe \".max\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.max()(['trials']))\r\n                .toBe 112\r\n\r\n        describe \".first\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.first()(['name']))\r\n                .toBe 'Carol'\r\n\r\n        describe \".last\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.last()(['name']))\r\n                .toBe 'Nick'\r\n\r\n        describe \".average\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.average()(['trials']))\r\n                .toBe 103\r\n\r\n        describe \".median\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.median()(['trials']))\r\n                .toBe 102.5\r\n\r\n        describe \".quantile\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.quantile(0)(['trials']))\r\n                .toBe 95\r\n                expect getVal(tpl.quantile(0.1)(['trials']))\r\n                .toBe 98.5\r\n                expect getVal(tpl.quantile(0.25)(['trials']))\r\n                .toBe 98.5\r\n                expect getVal(tpl.quantile(1/3)(['trials']))\r\n                .toBe 102\r\n                expect getVal(tpl.quantile(1)(['trials']))\r\n                .toBe 112\r\n\r\n        describe \".var\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.var()(['trials']))\r\n                .toBe 48.666666666666686\r\n\r\n        describe \".stdev\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.stdev()(['trials']))\r\n                .toBe 6.976149845485451\r\n\r\n        describe \".sumOverSum\", ->\r\n            it \"works\", ->\r\n                expect getVal(tpl.sumOverSum()(['successes', 'trials']))\r\n                .toBe (12+25+30+14)/(95+102+103+112)\r\n\r\n    describe \".naturalSort()\", ->\r\n        naturalSort = $.pivotUtilities.naturalSort\r\n\r\n        sortedArr = [\r\n            null, NaN,\r\n            -Infinity, '-Infinity', -3, '-3', -2, '-2', -1, '-1',\r\n            0, '2e-1', 1, '01', '1', 2, '002', '002e0', '02', '2', '2e-0',\r\n            3, 10, '10', '11', '12', '1e2', '112', Infinity, 'Infinity',\r\n            '1a', '2a','12a','20a',\r\n            'A', 'A', 'NaN', 'a', 'a',\r\n            'a01', 'a012', 'a02', 'a1', 'a2', 'a12', 'a12', 'a21', 'a21',\r\n            'b', 'c', 'd', 'null'\r\n        ]\r\n\r\n        it \"sorts naturally (null, NaN, numbers & numbery strings, Alphanum for text strings)\", ->\r\n            expect sortedArr.slice().sort(naturalSort)\r\n            .toEqual sortedArr\r\n\r\n    describe \".sortAs()\", ->\r\n        sortAs = $.pivotUtilities.sortAs\r\n\r\n        it \"sorts with unknown values sorted at the end\", ->\r\n            expect [5,2,3,4,1].sort sortAs([4,3,2])\r\n            .toEqual [4,3,2,1,5]\r\n\r\n        it \"sorts lowercase after uppercase\", ->\r\n            expect [\"Ab\",\"aA\",\"aa\",\"ab\"].sort sortAs([\"Ab\",\"Aa\"])\r\n            .toEqual [\"Ab\",\"ab\",\"aa\",\"aA\"]\r\n\r\n    describe \".numberFormat()\", ->\r\n        numberFormat = $.pivotUtilities.numberFormat\r\n\r\n        it \"formats numbers\", ->\r\n            nf = numberFormat()\r\n            expect nf 1234567.89123456\r\n            .toEqual \"1,234,567.89\"\r\n\r\n        it \"formats booleans\", ->\r\n            nf = numberFormat()\r\n            expect nf true\r\n            .toEqual \"1.00\"\r\n\r\n        it \"formats numbers in strings\", ->\r\n            nf = numberFormat()\r\n            expect nf \"1234567.89123456\"\r\n            .toEqual \"1,234,567.89\"\r\n\r\n        it \"doesn't formats strings\", ->\r\n            nf = numberFormat()\r\n            expect nf \"hi there\"\r\n            .toEqual \"\"\r\n\r\n        it \"doesn't formats objects\", ->\r\n            nf = numberFormat()\r\n            expect nf {a:1}\r\n            .toEqual \"\"\r\n\r\n        it \"formats percentages\", ->\r\n            nf = numberFormat(scaler: 100, suffix: \"%\")\r\n            expect nf 0.12345\r\n            .toEqual \"12.35%\"\r\n\r\n        it \"adds separators\", ->\r\n            nf = numberFormat(thousandsSep: \"a\", decimalSep: \"b\")\r\n            expect nf 1234567.89123456\r\n            .toEqual \"1a234a567b89\"\r\n\r\n        it \"adds prefixes and suffixes\", ->\r\n            nf = numberFormat(prefix: \"a\", suffix: \"b\")\r\n            expect nf 1234567.89123456\r\n            .toEqual \"a1,234,567.89b\"\r\n\r\n        it \"scales and rounds\", ->\r\n            nf = numberFormat(digitsAfterDecimal: 3, scaler: 1000)\r\n            expect nf 1234567.89123456\r\n            .toEqual \"1,234,567,891.235\"\r\n\r\n    describe \".derivers\", ->\r\n        describe \".dateFormat()\", ->\r\n            df = $.pivotUtilities.derivers.dateFormat \"x\", \"abc % %% %%% %a %y %m %n %d %w %x %H %M %S\", true\r\n\r\n            it \"formats date objects\", ->\r\n                expect df {x: new Date(\"2015-01-02T23:43:11Z\")}\r\n                .toBe 'abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11'\r\n\r\n            it \"formats input parsed by Date.parse()\", ->\r\n                expect df {x: \"2015-01-02T23:43:11Z\"}\r\n                .toBe 'abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11'\r\n\r\n                expect df {x: \"bla\"}\r\n                .toBe ''\r\n\r\n        describe \".bin()\", ->\r\n            binner = $.pivotUtilities.derivers.bin \"x\", 10\r\n\r\n            it \"bins numbers\", ->\r\n                expect binner {x: 11}\r\n                .toBe 10\r\n\r\n                expect binner {x: 9}\r\n                .toBe 0\r\n\r\n                expect binner {x: 111}\r\n                .toBe 110\r\n\r\n            it \"bins booleans\", ->\r\n                expect binner {x: true}\r\n                .toBe 0\r\n\r\n            it \"bins negative numbers\", ->\r\n                expect binner {x: -12}\r\n                .toBe -10\r\n\r\n            it \"doesn't bin strings\", ->\r\n                expect binner {x: \"a\"}\r\n                .toBeNaN()\r\n\r\n            it \"doesn't bin objects\", ->\r\n                expect binner {x: {a:1}}\r\n                .toBeNaN()\r\n"]}